{"version":3,"sources":["things.js"],"names":["express","require","bcrypt","router","Router","saltRound","authMiddleware","req","res","next","console","log","use","get","resp","post","body","data","Date","now","name","email","hash","password","age","role","user","_id","status","send","userMatched","submittedPassword","savedPassword","passwordMatched","compare","message","error","fakeHashedPassword","route","put","params","mouseid","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\nconst express = require(\"express\");\r\nconst bcrypt = require(\"bcrypt\");\r\nconst router = express.Router();\r\nlet saltRound = 13;\r\n\r\n\r\nconst authMiddleware = (req, res, next)=>{\r\n    console.log(\"authenticiation is called\");\r\n    next();\r\n}\r\n\r\nrouter.use(authMiddleware);\r\n\r\nrouter.get(\"/\", (req, resp)=>{\r\n\r\n    console.log(\"i am inside root of this router-thing\");\r\n});\r\n\r\n\r\nrouter.post(\"/register\", async(req, res, next)=> {\r\n    try{\r\n        console.log(\"i am herer\")\r\n        console.log(req.body.data);\r\n        let user = {\r\n            _id: Date.now(),\r\n            name: req.body.data.name,\r\n            email:req.body.data.email,\r\n            password: await bcrypt.hash(req.body.data.password, saltRound),\r\n            age:req.body.data.age,\r\n            role:req.body.data.role\r\n        }\r\n\r\n        await res.status(201).send(user);\r\n    }\r\n    catch(err){\r\n        console.log(`${err} error happened`)\r\n    }\r\n}\r\n);\r\n\r\n\r\nrouter.post(\"/login\", async(req, res, next)=>{\r\n    \r\n    try{\r\n        //check if that email exist otherwise there is no point of hashing submitted password\r\n        let userMatched = true;\r\n        if(userMatched){\r\n    \r\n            let submittedPassword = req.body.data.password; \r\n            let savedPassword = await bcrypt.hash('Pulchowk@123', saltRound);\r\n            let passwordMatched = bcrypt.compare(submittedPassword, savedPassword);\r\n    \r\n            if(passwordMatched){\r\n    \r\n                console.log(\" party !! do login\");\r\n                res.status(200).send({status:200, message:\"guest is our user\"}) \r\n            }\r\n    \r\n            else{\r\n                console.log(\"sorry we dont recognize you\");\r\n                res.status(401).send({status: 401, error: \"Password didn't matched\" });\r\n            }\r\n    \r\n        }\r\n        //if that email doesnot match we don't send response within the spot rather we consume\r\n        //same amount time it take for if email matches\r\n        else {\r\n    \r\n            // fake pass\r\n            let fakeHashedPassword = `$2B$${saltRound}passwordisaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`;\r\n            bcrypt.compare(submittedPassword, fakeHashedPassword);\r\n            res.status(401).send({status:401, error:\"your credential doesnot match with ours\"});\r\n        }\r\n            \r\n    }\r\n    catch(err){\r\n        console.log(`${err} is catched`);\r\n    }\r\n});\r\n\r\n\r\n\r\nrouter.route(\"/mouse\")\r\n    .get((req, res)=>{\r\n        console.log(\"get all mouse\");\r\n    })\r\n    .put((req, res)=>{\r\n        console.log(\"add new mouse\");\r\n    })\r\n\r\nrouter.route(\"/mouse/:mouseid\")\r\n.get((req, res)=>{\r\n    console.log(`i demand the mouse with id ${req.params.mouseid}`);\r\n})\r\n.put((req, res)=>[\r\n    console.log(`i demand to update the mouse with id of ${req.params.mouseid}`)\r\n])\r\n\r\nmodule.exports = router;\r\n"],"file":"things.dev.js"}