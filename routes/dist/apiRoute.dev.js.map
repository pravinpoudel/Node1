{"version":3,"sources":["apiRoute.js"],"names":["express","require","router","Router","emailValidation","passwordValidation","passwordConfirmation","validationResult","users","cheese","get","req","res","status","send","message","post","next","console","log","url","error","isEmpty","array","body","data","email","password","err","module","exports"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;eACoEF,OAAO,CAAC,sBAAD,C;IAApEG,e,YAAAA,e;IAAiBC,kB,YAAAA,kB;IAAoBC,oB,YAAAA,oB;;gBAChBL,OAAO,CAAC,mBAAD,C;IAA5BM,gB,aAAAA,gB;;gBAEiBN,OAAO,CAAC,SAAD,C;IAAxBO,K,aAAAA,K;IAAOC,M,aAAAA,M;;AAEdP,MAAM,CAACQ,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAY;AACxBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,IAAAA,OAAO,EAAE;AAAV,GAArB;AACH,CAFD;AAIAb,MAAM,CAACc,IAAP,CAAY,WAAZ,EAAyB,UAACL,GAAD,EAAMC,GAAN,EAAWK,IAAX,EAAkB;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACS,GAAhB;AACH,CAFD;AAIAlB,MAAM,CAACc,IAAP,CAAY,OAAZ,EAAqB,CAACZ,eAAD,EAAkBC,kBAAlB,EAAsCC,oBAAtC,CAArB,EACY,iBAAMK,GAAN,EAAWC,GAAX,EAAgBK,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,cAAG;AACOI,YAAAA,KADP,GACed,gBAAgB,CAACI,GAAD,CAD/B;;AAEC,gBAAG,CAACU,KAAK,CAACC,OAAN,EAAJ,EAAoB;AACjBV,cAAAA,GAAG,CAACE,IAAJ,CAASO,KAAK,CAACE,KAAN,EAAT;AACF,aAFD,MAGI;AACAX,cAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,gCAA6CH,GAAG,CAACa,IAAJ,CAASC,IAAT,CAAcC,KAA3D,4BAAkFf,GAAG,CAACa,IAAJ,CAASC,IAAT,CAAcE,QAAhG;AACH;AACJ,WARD,CASA,OAAMC,GAAN,EAAU;AACNV,YAAAA,OAAO,CAACC,GAAR,yBAA6BS,GAA7B;AACH;;AAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CADZ;AAgBAC,MAAM,CAACC,OAAP,GAAiB5B,MAAjB","sourcesContent":["const express = require(\"express\");\r\nconst router = express.Router();\r\nconst {emailValidation, passwordValidation, passwordConfirmation} = require(\"../public/validation\");\r\nconst {validationResult} =  require(\"express-validator\");\r\n\r\nconst {users, cheese} = require(\"../data\");\r\n\r\nrouter.get(\"/\", (req, res)=>{\r\n    res.status(200).send({message: \"Health is good !!! \"});\r\n})\r\n\r\nrouter.post(\"/register\", (req, res, next)=>{\r\n    console.log(req.url);\r\n})\r\n\r\nrouter.post(\"/user\", [emailValidation, passwordValidation, passwordConfirmation], \r\n            async(req, res, next)=> {\r\n                try{\r\n                    const error = validationResult(req);\r\n                    if(!error.isEmpty()){\r\n                       res.send(error.array());\r\n                    }\r\n                    else{\r\n                        res.status(200).send(`sucessfully loggedin ${req.body.data.email} and password: ${req.body.data.password}`);\r\n                    }\r\n                }\r\n                catch(err){\r\n                    console.log(`we have error ${err}`)\r\n                }\r\n});\r\n\r\nmodule.exports = router;"],"file":"apiRoute.dev.js"}