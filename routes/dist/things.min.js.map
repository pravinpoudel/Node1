{"version":3,"sources":["things.js"],"names":["express","require","router","Router","bcrypt","saltRound","req","res","next","console","log","authMiddleware","use","send","data","post","body","user","regeneratorRuntime","async","_context","prev","t0","Date","t1","name","t2","email","awrap","password","t3","sent","t4","age","t5","role","status","t6","stop","_submittedPassword","savedPassword","fakeHashedPassword","_context2","submittedPassword","hash","compare","message","error","concat","userMatched","route","passwordMatched","put","get","params","mouseid","module","exports"],"mappings":"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","file":"things.min.js","sourcesContent":["'use strict';\r\nconst express = require(\"express\");\r\nconst bcrypt = require(\"bcrypt\");\r\nconst router = express.Router();\r\nlet saltRound = 13;\r\n\r\n\r\nconst authMiddleware = (req, res, next)=>{\r\n    console.log(\"authenticiation is called\");\r\n    next();\r\n}\r\n\r\nrouter.use(authMiddleware);\r\n\r\nrouter.get(\"/\", (req, resp)=>{\r\n\r\n    console.log(\"i am inside root of this router-thing\");\r\n});\r\n\r\nrouter.post(\"/user\", (req, res, next)=> {\r\n\r\n    res.send(req.body.data);\r\n\r\n});\r\nrouter.post(\"/register\", async(req, res, next)=> {\r\n    try{\r\n        console.log(\"i am herer\")\r\n        console.log(req.body.data);\r\n        let user = {\r\n            _id: Date.now(),\r\n            name: req.body.data.name,\r\n            email:req.body.data.email,\r\n            password: await bcrypt.hash(req.body.data.password, saltRound),\r\n            age:req.body.data.age,\r\n            role:req.body.data.role\r\n        }\r\n\r\n        await res.status(201).send(user);\r\n    }\r\n    catch(err){\r\n        console.log(`${err} error happened`)\r\n    }\r\n}\r\n);\r\n\r\n\r\nrouter.post(\"/login\", async(req, res, next)=>{\r\n    \r\n    try{\r\n        //check if that email exist otherwise there is no point of hashing submitted password\r\n        let userMatched = true;\r\n        if(userMatched){\r\n    \r\n            let submittedPassword = req.body.data.password; \r\n            let savedPassword = await bcrypt.hash('Pulchowk@123', saltRound);\r\n            let passwordMatched = bcrypt.compare(submittedPassword, savedPassword);\r\n    \r\n            if(passwordMatched){\r\n    \r\n                console.log(\" party !! do login\");\r\n                res.status(200).send({status:200, message:\"guest is our user\"}) \r\n            }\r\n    \r\n            else{\r\n                console.log(\"sorry we dont recognize you\");\r\n                res.status(401).send({status: 401, error: \"Password didn't matched\" });\r\n            }\r\n    \r\n        }\r\n        //if that email doesnot match we don't send response within the spot rather we consume\r\n        //same amount time it take for if email matches\r\n        else {\r\n    \r\n            // fake pass\r\n            let fakeHashedPassword = `$2B$${saltRound}passwordisaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`;\r\n            bcrypt.compare(submittedPassword, fakeHashedPassword);\r\n            res.status(401).send({status:401, error:\"your credential doesnot match with ours\"});\r\n        }\r\n            \r\n    }\r\n    catch(err){\r\n        console.log(`${err} is catched`);\r\n    }\r\n});\r\n\r\n\r\n\r\nrouter.route(\"/mouse\")\r\n    .get((req, res)=>{\r\n        console.log(\"get all mouse\");\r\n    })\r\n    .put((req, res)=>{\r\n        console.log(\"add new mouse\");\r\n    })\r\n\r\nrouter.route(\"/mouse/:mouseid\")\r\n.get((req, res)=>{\r\n    console.log(`i demand the mouse with id ${req.params.mouseid}`);\r\n})\r\n.put((req, res)=>[\r\n    console.log(`i demand to update the mouse with id of ${req.params.mouseid}`)\r\n])\r\n\r\nmodule.exports = router;\r\n"]}