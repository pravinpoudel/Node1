{"version":3,"sources":["index.js"],"names":["express","require","path","http","cors","jwt","thing","apiRoute","mongoose","sup","sup2","config","JWT_KEY","process","env","app","router","Router","port","connect","DB_CONNECT","useNewUrlParser","useUnifiedTopology","then","console","log","err","use","json","set","join","__dirname","acceptedOrigin","corsOption","origin","corsCheck","callback","originState","error","indexOf","Error","get","req","res","render","url","sendFile","root","redirect","send","index","listen"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nconst express = require(\"express\");\r\nconst path = require(\"path\");\r\nconst http = require(\"http\");\r\nconst cors = require(\"cors\");\r\nconst jwt = require(\"jsonwebtoken\")\r\nconst thing = require(\"./routes/things\");\r\nconst apiRoute = require(\"./routes/apiRoute\");\r\nconst mongoose = require(\"mongoose\");\r\nconst {sup, sup2} = require(\"./middle\");\r\nrequire(\"dotenv\").config();\r\nconst JWT_KEY = process.env.JWT_KEY;\r\n\r\nconst app = express();\r\n\r\nconst router = express.Router();\r\n\r\nlet port = process.env.port || 4000;\r\n\r\nmongoose.connect(process.env.DB_CONNECT, { useNewUrlParser: true , useUnifiedTopology: true }).then(()=>{\r\n  console.log(\"sucessfully connected\");\r\n}).catch((err)=>{\r\n    console.log(`${err} error is in the program`)\r\n});\r\n\r\napp.use(cors());\r\napp.use(express.json());\r\napp.use('/things', thing);\r\napp.use(\"/api\", apiRoute);\r\n\r\napp.set('views', path.join(__dirname, \"views\"));\r\napp.set(\"view engine\", \"pug\");\r\n\r\nlet acceptedOrigin = [\"http://www.example1.com\", \"http://www.example2.com\", \"http://localhost:3000\"]\r\n\r\nlet corsOption = { origin: function corsCheck(origin, callback){\r\n\r\n    let originState, error;\r\n\r\n    if( acceptedOrigin.indexOf(origin) !== -1 || !origin){\r\n\r\n        originState = {origin: true}\r\n        error = null;\r\n    }\r\n\r\n    else{\r\n\r\n        originState ={origin: false}\r\n        error = new Error(\"this origin isnot allowded\")\r\n    }\r\n\r\n    callback( error, originState);\r\n}\r\n}\r\n\r\napp.use(router);\r\n\r\n\r\nrouter.get(\"/\",  cors(corsOption), sup, sup2, (req, res)=>{\r\n\r\n    res.render('index');\r\n    console.log(req.url);\r\n    console.log(\"root url is called\");\r\n    // sendfile demand absolute path so for that we have option with root\r\n    res.sendFile('index.html', {root: path.join( __dirname, '/public/')});\r\n    //note that we are not providing absolute path by our own or with __dirname concatinated with public \r\n    // because this may conflict with the convention of front slash and back slash so here path.join() come handy\r\n\r\n});\r\n\r\n// Redirect OLD url to NEW ------------------------------------------------------------\r\n\r\nrouter.get(\"/old\", (req, res)=>{\r\n\r\n    res.redirect(302, \"/new\");\r\n\r\n});\r\n\r\nrouter.get(\"/new\", (req, res)=>{\r\n\r\n    res.send(\"<h1> I AM NEW </h1>\");\r\n});\r\n\r\n// -------------------------------------------------------------------------------------\r\n\r\n// here since we have option with false indexing mean that it wont take index.html as a default file for 404 in static serve also\r\napp.use(express.static('public', {index: false}));\r\n\r\napp.listen(port, (err)=> {\r\n    if(err){\r\n        return(console.log(\"i am listening\"));\r\n    }\r\n    console.log(`listening to the port ${port}`);\r\n});"],"file":"index.dev.js"}